// Code generated by protoc-gen-go.
// source: msg.proto
// DO NOT EDIT!

package server

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Request_Verb int32

const (
	Request_GET    Request_Verb = 1
	Request_SET    Request_Verb = 2
	Request_DEL    Request_Verb = 3
	Request_REV    Request_Verb = 5
	Request_WAIT   Request_Verb = 6
	Request_NOP    Request_Verb = 7
	Request_WALK   Request_Verb = 9
	Request_GETDIR Request_Verb = 14
	Request_STAT   Request_Verb = 16
	Request_ACCESS Request_Verb = 99
)

var Request_Verb_name = map[int32]string{
	1:  "GET",
	2:  "SET",
	3:  "DEL",
	5:  "REV",
	6:  "WAIT",
	7:  "NOP",
	9:  "WALK",
	14: "GETDIR",
	16: "STAT",
	99: "ACCESS",
}
var Request_Verb_value = map[string]int32{
	"GET":    1,
	"SET":    2,
	"DEL":    3,
	"REV":    5,
	"WAIT":   6,
	"NOP":    7,
	"WALK":   9,
	"GETDIR": 14,
	"STAT":   16,
	"ACCESS": 99,
}

func (x Request_Verb) Enum() *Request_Verb {
	p := new(Request_Verb)
	*p = x
	return p
}
func (x Request_Verb) String() string {
	return proto.EnumName(Request_Verb_name, int32(x))
}
func (x Request_Verb) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Request_Verb) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Request_Verb_value, data, "Request_Verb")
	if err != nil {
		return err
	}
	*x = Request_Verb(value)
	return nil
}

type Response_Err int32

const (
	Response_OTHER        Response_Err = 127
	Response_TAG_IN_USE   Response_Err = 1
	Response_UNKNOWN_VERB Response_Err = 2
	Response_READONLY     Response_Err = 3
	Response_TOO_LATE     Response_Err = 4
	Response_REV_MISMATCH Response_Err = 5
	Response_BAD_PATH     Response_Err = 6
	Response_MISSING_ARG  Response_Err = 7
	Response_RANGE        Response_Err = 8
	Response_NOTDIR       Response_Err = 20
	Response_ISDIR        Response_Err = 21
	Response_NOENT        Response_Err = 22
)

var Response_Err_name = map[int32]string{
	127: "OTHER",
	1:   "TAG_IN_USE",
	2:   "UNKNOWN_VERB",
	3:   "READONLY",
	4:   "TOO_LATE",
	5:   "REV_MISMATCH",
	6:   "BAD_PATH",
	7:   "MISSING_ARG",
	8:   "RANGE",
	20:  "NOTDIR",
	21:  "ISDIR",
	22:  "NOENT",
}
var Response_Err_value = map[string]int32{
	"OTHER":        127,
	"TAG_IN_USE":   1,
	"UNKNOWN_VERB": 2,
	"READONLY":     3,
	"TOO_LATE":     4,
	"REV_MISMATCH": 5,
	"BAD_PATH":     6,
	"MISSING_ARG":  7,
	"RANGE":        8,
	"NOTDIR":       20,
	"ISDIR":        21,
	"NOENT":        22,
}

func (x Response_Err) Enum() *Response_Err {
	p := new(Response_Err)
	*p = x
	return p
}
func (x Response_Err) String() string {
	return proto.EnumName(Response_Err_name, int32(x))
}
func (x Response_Err) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Response_Err) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Err_value, data, "Response_Err")
	if err != nil {
		return err
	}
	*x = Response_Err(value)
	return nil
}

type Request struct {
	Tag              *int32        `protobuf:"varint,1,opt,name=tag" json:"tag,omitempty"`
	Verb             *Request_Verb `protobuf:"varint,2,opt,name=verb,enum=server.Request_Verb" json:"verb,omitempty"`
	Path             *string       `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	Value            []byte        `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	OtherTag         *int32        `protobuf:"varint,6,opt,name=other_tag" json:"other_tag,omitempty"`
	Offset           *int32        `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Rev              *int64        `protobuf:"varint,9,opt,name=rev" json:"rev,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (this *Request) Reset()         { *this = Request{} }
func (this *Request) String() string { return proto.CompactTextString(this) }
func (*Request) ProtoMessage()       {}

func (this *Request) GetTag() int32 {
	if this != nil && this.Tag != nil {
		return *this.Tag
	}
	return 0
}

func (this *Request) GetVerb() Request_Verb {
	if this != nil && this.Verb != nil {
		return *this.Verb
	}
	return 0
}

func (this *Request) GetPath() string {
	if this != nil && this.Path != nil {
		return *this.Path
	}
	return ""
}

func (this *Request) GetValue() []byte {
	if this != nil {
		return this.Value
	}
	return nil
}

func (this *Request) GetOtherTag() int32 {
	if this != nil && this.OtherTag != nil {
		return *this.OtherTag
	}
	return 0
}

func (this *Request) GetOffset() int32 {
	if this != nil && this.Offset != nil {
		return *this.Offset
	}
	return 0
}

func (this *Request) GetRev() int64 {
	if this != nil && this.Rev != nil {
		return *this.Rev
	}
	return 0
}

type Response struct {
	Tag              *int32        `protobuf:"varint,1,opt,name=tag" json:"tag,omitempty"`
	Flags            *int32        `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Rev              *int64        `protobuf:"varint,3,opt,name=rev" json:"rev,omitempty"`
	Path             *string       `protobuf:"bytes,5,opt,name=path" json:"path,omitempty"`
	Value            []byte        `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	Len              *int32        `protobuf:"varint,8,opt,name=len" json:"len,omitempty"`
	ErrCode          *Response_Err `protobuf:"varint,100,opt,name=err_code,enum=server.Response_Err" json:"err_code,omitempty"`
	ErrDetail        *string       `protobuf:"bytes,101,opt,name=err_detail" json:"err_detail,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (this *Response) Reset()         { *this = Response{} }
func (this *Response) String() string { return proto.CompactTextString(this) }
func (*Response) ProtoMessage()       {}

func (this *Response) GetTag() int32 {
	if this != nil && this.Tag != nil {
		return *this.Tag
	}
	return 0
}

func (this *Response) GetFlags() int32 {
	if this != nil && this.Flags != nil {
		return *this.Flags
	}
	return 0
}

func (this *Response) GetRev() int64 {
	if this != nil && this.Rev != nil {
		return *this.Rev
	}
	return 0
}

func (this *Response) GetPath() string {
	if this != nil && this.Path != nil {
		return *this.Path
	}
	return ""
}

func (this *Response) GetValue() []byte {
	if this != nil {
		return this.Value
	}
	return nil
}

func (this *Response) GetLen() int32 {
	if this != nil && this.Len != nil {
		return *this.Len
	}
	return 0
}

func (this *Response) GetErrCode() Response_Err {
	if this != nil && this.ErrCode != nil {
		return *this.ErrCode
	}
	return 0
}

func (this *Response) GetErrDetail() string {
	if this != nil && this.ErrDetail != nil {
		return *this.ErrDetail
	}
	return ""
}

func init() {
	proto.RegisterEnum("server.Request_Verb", Request_Verb_name, Request_Verb_value)
	proto.RegisterEnum("server.Response_Err", Response_Err_name, Response_Err_value)
}
